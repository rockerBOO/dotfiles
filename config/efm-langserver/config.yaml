---
version: 2
log-file: /tmp/efm.log
log-level: 4
root-markers:
  - .git/

tools:
  eruby-erb: &eruby-erb
    lint-command: 'erb -x -T - | ruby -c'
    lint-stdin: true
    lint-offset: 1
    format-command: htmlbeautifier

  vim-vint: &vim-vint
    lint-command: 'vint -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'

  make-checkmake: &make-checkmake
    lint-command: 'checkmake'
    lint-stdin: true

  markdown-markdownlint: &markdown-markdownlint
    lint-command: 'markdownlint-cli -s'
    lint-stdin: true
    lint-formats:
      - '%f:%l %m'
      - '%f:%l:%c %m'
      - '%f: %l: %m'

  markdown-pandoc: &markdown-pandoc
    format-command: 'pandoc -f markdown -t gfm -sp --tab-stop=2'

  rst-pandoc: &rst-pandoc
    format-command: 'pandoc -f rst -t rst -s --columns=79'

  rst-lint: &rst-lint
    lint-command: 'rst-lint'
    lint-formats:
      - '%tNFO %f:%l %m'
      - '%tARNING %f:%l %m'
      - '%tRROR %f:%l %m'
      - '%tEVERE %f:%l %m'

  yaml-yamllint: &yaml-yamllint
    lint-command: 'yamllint -f parsable -'
    lint-stdin: true

  python-flake8: &python-flake8
    lint-command: 'flake8 --stdin-display-name ${INPUT} -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'

  python-mypy: &python-mypy
    lint-command: 'mypy --show-column-numbers'
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'

  dockerfile-hadolint: &dockerfile-hadolint
    lint-command: 'hadolint'
    lint-formats:
      - '%f:%l %m'

  sh-shellcheck: &sh-shellcheck
    lint-command: 'shellcheck -f gcc -x'
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'

  sh-shfmt: &sh-shfmt
    format-command: 'shfmt -ci -s -bn'
    format-stdin: true

  eslint_d: &eslint_d
    lint-command: './node_modules/.bin/eslint_d -f visualstudio --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%f(%l,%c): %tarning %m"
      - "%f(%l,%c): %rror %m"
    root-markers:
      - .eslintrc.cjs
      - .eslintrc.js
      - .eslintrc.yaml
      - .eslintrc.yml
      - .eslintrc.json

  eslint: &eslint
    lint-command: './node_modules/.bin/eslint -f visualstudio --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%f(%l,%c): %tarning %m"
      - "%f(%l,%c): %rror %m"
    root-markers:
      - .eslintrc.cjs
      - package.json
      - .eslintrc.js
      - .eslintrc.yaml
      - .eslintrc.yml
      - .eslintrc.json

  yarn-prettier: &yarn-prettier
    format-command: 'yarn workspace site prettier --stdin-filepath ${INPUT}'
    format-stdin: true
    root-markers:
      - '.prettierrc'
      - '.prettierrc.json'

  local-prettier: &local-prettier
    format-command: './node_modules/.bin/prettier --stdin-filepath ${INPUT}'
    format-stdin: true
    root-markers:
      - '.prettierrc'
      - '.prettierrc.json'

  prettier: &prettier
    format-command: 'prettier --stdin-filepath ${INPUT}'
    format-stdin: true
    root-markers:
      - '.prettierrc'
      - '.prettierrc.json'

  prettier-d: &prettier_d
    format-command: 'prettierd --stdin-filename ${INPUT}'
    format-stdin: true
    root-markers:
      - '.prettierrc'
      - '.prettierrc.json'

  prettier-d-slim: &prettier-d-slim
    format-command: 'prettier_d_slim --stdin --stdin-filepath ${INPUT}'
    format-stdin: true
    root-markers:
      - '.prettierrc'
      - '.prettierrc.json'

  local-prettier-d-slim: &local-prettier-d-slim
    format-command: './node_modules/.bin/prettier_d_slim --stdin --stdin-filepath ${INPUT}'
    format-stdin: true
    root-markers:
      - '.prettierrc'
      - '.prettierrc.json'

  php-phpstan: &php-phpstan
    lint-command: \
      './vendor/bin/phpstan analyze --error-format raw --no-progress'

  php-psalm: &php-psalm
    lint-command: './vendor/bin/psalm --output-format=emacs --no-progress'
    lint-formats:
      - '%f:%l:%c:%trror - %m'
      - '%f:%l:%c:%tarning - %m'

  html-prettier: &html-prettier
    format-command: './node_modules/.bin/prettier --parser html --stdin-filename ${INPUT}'
    format-stdin: true
    root-markers:
      - .prettierrc
      - .prettierrc.json

  css-prettier: &css-prettier
    format-command: './node_modules/.bin/prettier --parser css --stdin-filename ${INPUT}'
    format-stdin: true
    root-markers:
      - .prettierrc
      - .prettierrc.json

  json-prettier: &json-prettier
    format-command: './node_modules/.bin/prettier --parser json --stdin-filename ${INPUT}'
    format-stdin: true
    root-markers:
      - .prettierrc
      - .prettierrc.json

  json-jq: &json-jq
    lint-command: 'jq .'

  json-fixjson: &json-fixjson
    format-command: 'fixjson'

  csv-csvlint: &csv-csvlint
    lint-command: 'csvlint'

  stylelint-lint: &stylelint-lint
    lint-command: './node_modules/.bin/stylelint --formatter unix --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: false
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m [%t%*[a-z]]'
    root-markers:
      - .stylelintrc.json
      - .stylelintrc

  stylelint_d-lint: &stylelint_d-lint
    lint-command: './node_modules/.bin/stylelint_d --formatter unix --stdin --stdin-filename ${INPUT}'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m [%t%*[a-z]]'
    root-markers:
      - .stylelintrc.json
      - .stylelintrc

  lua-stylua-format: &lua-stylua-format
    format-command: 'stylua -'
    format-stdin: true
    root-markers:
      - 'stylua.toml'

  luacheck: &luacheck
    lint-command: 'luacheck --globals vim --filename ${INPUT} --formatter plain -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'

  vale: &vale
    lint-command: 'vale --output=line '
    lint-ignore-exit-code: true
    # lint-stdin: true
    root-markers:
      - '.vale.ini'

  blade-blade-formatter: &blade-blade-formatter
    format-command: 'blade-formatter --stdin'
    format-stdin: true

  any-excitetranslate: &any-excitetranslate
    hover-command: 'excitetranslate'
    hover-stdin: true

languages:
  eruby:
    - <<: *eruby-erb

  vim:
    - <<: *vim-vint

  make:
    - <<: *make-checkmake

  markdown:
    # - <<: *markdown-pandoc
    - <<: *vale
    - <<: *markdown-markdownlint
    # - <<: *prettier

  rst:
    - <<: *rst-lint
    - <<: *rst-pandoc

  yaml:
    - <<: *yaml-yamllint

  python:
    - <<: *python-flake8
    - <<: *python-mypy

  dockerfile:
    - <<: *dockerfile-hadolint

  sh:
    - <<: *sh-shellcheck
    - <<: *sh-shfmt

  javascript:
    - <<: *eslint_d
    - <<: *local-prettier-d-slim

  javascriptreact:
    - <<: *eslint_d
    - <<: *local-prettier-d-slim
    - <<: *stylelint_d-lint

  typescript:
    # - <<: *eslint_d
    - <<: *local-prettier-d-slim

  typescriptreact:
    # - <<: *eslint_d
    - <<: *local-prettier-d-slim
    - <<: *stylelint_d-lint

  php:
    - <<: *php-phpstan
    - <<: *php-psalm

  html:
    # - <<: *local-prettier-d-slim
    # - <<: *local-prettier
    - <<: *yarn-prettier
    - <<: *vale

  css:
    - <<: *css-prettier
    - <<: *stylelint_d-lint

  json:
    - <<: *json-jq
    # - <<: *json-fixjson
    - <<: *json-prettier

  csv:
    - <<: *csv-csvlint

  lua:
    - <<: *lua-stylua-format
    - <<: *luacheck

  blade:
    - <<: *blade-blade-formatter

  _:
    - <<: *any-excitetranslate
