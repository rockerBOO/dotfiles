#!/bin/sh
#
# git-deploy
#
# Simplifies some of the everyday branching things I do.
#
# Examples:
#
#   git deploy push test master
#   git deploy push live master
#   git deploy diff test --name-only

usage() {
	echo "usage:"
	echo "  git deploy push <test|live> <branch>"
	echo "  git deploy diff <branch>"
}

main() {
    if [ $# -lt 1 ]; then
        usage
        exit 1
    fi

    local SUBCOMMAND="$1"
    shift

    if ! type "cmd_$SUBCOMMAND" >/dev/null 2>&1; then
        echo "Unknown subcommand: '$SUBCOMMAND'"
        usage
        exit 1
    fi
        
    cmd_$SUBCOMMAND "$@"
}

cmd_diff() {
    local BRANCH_NAME=$1; shift
    local OPTIONS=$@

    git fetch
    git diff origin/live origin/$BRANCH_NAME $OPTIONS
}

cmd_push() {
    verify_clean_working_dir

    if [ $# -lt 2 ]; then
        echo "No target branch specified."
        exit 1
    fi

    if [ "$1" == "test" -o "$1" == "live" ]; then
        git push origin $2
        git fetch
        git branch -f $1 origin/$1
        git checkout $1
        git reset --hard origin/$2
        git push -f origin $1
        git checkout $2
        git branch -D $1
#        `curl -u 059703f709d829c6aa76e3f6d567ba0e35a40f6e:x \
#        -H 'Content-Type: application/json' \
#        -d '{"message":{"body":"Deploying..."}}' \
#        https://virb.campfirenow.com/room/447289/speak.json`
    else
        echo "Available environments: test, live"
    fi
}

verify_clean_working_dir() {
    local GITSTAT=$(git status 2>/dev/null | grep '\(# Untracked\|# Changes\|# Changed but not updated:\)')

    if [[ $(echo ${GITSTAT}) ]]; then
        echo "Working directory must be clean."
        exit 1
    fi
}

main "$@"
